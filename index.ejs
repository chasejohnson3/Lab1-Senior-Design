<html>
  <head>
  <script language="JavaScript">
  // <!-- hide this script from old browsers
  function tempSwap(form)
  {
    var f = parseFloat(form.DegF.value, 10);
    var c = 0;
    c = (f - 32.0) * 5.0 / 9.0;
    form.DegC.value = c;
  }
  
  function refresh()
  {
    window.location.href = "./";
  }


  // done hiding from old browsers -->
  // Credit: https://computer.howstuffworks.com/javascript.htm
  //Information for setting up Ploty: https://plot.ly/javascript/getting-started/
  //Look at https://www.youtube.com/watch?v=2-tnkzG0sKU for information on plotting using Plotly
  </script>
	<style type="text/css">
   div.bold-red {
      color: red;
      font-weight: bold;
	}
</style>
  <!--Include the plotly library -->
  <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"
			  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
			  crossorigin="anonymous"></script>
  
  </head>
  <body>
  <FORM>
  <h1>Real-Time Temperature Sensor Web Interface </h1>
  
  <h1 class="tempArr" style="visibility: hidden;height:0px"><%= tempArr%></h1>

  <h2 class="timeArr" style="visibility: hidden;height:0px"><%= timeArr%></h2>

  <h1 class="tempArr3" style="visibility: hidden;height:0px"><%= tempArr3%></h1>

  <h2 class="timeArr3" style="visibility: hidden;height:0px"><%= timeArr3%></h2>

  <div id="tester" style="width:800px;height:350px;"></div>
  <!-- <h1 id="test">aldsfk</h1> -->
  <script>
  // Set limits on axes
    
	  var timeArr = [], tempArr = []; // Global arrays for continuous graph

    var tempArrStr = document.querySelector(".tempArr").textContent;
    var timeArrStr = document.querySelector(".timeArr").textContent;
	
    var tempArr = tempArrStr.split(',').map(function(item){
      return parseInt(item, 10);
    });
    var timeArr = timeArrStr.split(',').map(function(item){
      return parseInt(item, 10);
    });
	
    console.log("Temp arr is " + tempArr);
    console.log("Time arr is " + timeArr);

  
  TESTER = document.getElementById('tester');
	  
	//Gloabal Variable in this script used to track degree units. 0 = degC, 1 = degF  
	var degCorDegF = 0;
	function tempUnitSwap(){
  	  degCorDegF = !degCorDegF;
  }


	var lengthTimeArr = 0; // Glob var for cheking whether timeArr has changed, (when Pi is off)
	var time = 0; // Global variable for continuously couting time
  var message = '';
  var count = 0;
  var textTimeBuffer = 10;

	setInterval(function(){
    
		$.get('/sendTemps', function(data, status){
			var timeArr2 = data[1];
			var tempArr2 = data[0];
			timeArr.push(timeArr.length); // INcrease time always for the graph
			if(lengthTimeArr == timeArr2.length){
        // PI is off
				tempArr.push(null);
				message = "System OFF";
			}else{
				// Pi is on
				tempArr.push(tempArr2[tempArr2.length - 1]); // Put the value for this time regardless if its null or not
				
				if(tempArr2[tempArr2.length - 1] == null){
					message = "UNPLUGGED SENSOR";
				}else{
					if(degCorDegF == 0){
						message = tempArr2[tempArr2.length-1] + " degC";
					} else{
				      //Convert the current Temp to degF
						var currTempC = tempArr[tempArr.length-1];
						var currTempF = (currTempC*(9/5) + 32);

						message = currTempF + " degF";
				  }
				}
			}
			
      lengthTimeArr = timeArr2.length; // Update the leght of time from the Database
      // message = 50 + " degF"; // debugging
			document.getElementById("insttemp").textContent = message;
			
			var layout = {
			  xaxis: {
				title: { text: 'Seconds Ago from Current Time (s)'},
				range: [timeArr[timeArr.length-1]-300, timeArr[timeArr.length-1]] 
			  }, 
			  yaxis:{
				title: {text: "Temperature (degC)"},
				range: [10, 50] }, 
				title: { text: 'Temperature vs Time'},
        
			};

			Plotly.newPlot(TESTER, [{
			x: timeArr,
			y: tempArr, type:'scatter', marker: {
        color: 'rgba(252,141,98,1)',
        line: {color: 'black'}
      }}] ,
			layout, {showSendToCloud: true});
			
		  //     //******** Print the instantaneous Temp below the Temp graph **********//
		  //     if(tempArr[tempArr.length-1] == null){
			// document.getElementById("insttemp").textContent = "UNPLUGGED SENSOR";
		  //     }	
		  //     //The user wants instantaneous temp in Celsius
		  //     else if(degCorDegF == 0){
			// document.getElementById("insttemp").textContent = tempArr[tempArr.length-1] + " degC";
		  //     }
		  //     //The user wants instantaneous temp in Fahrenheit 
		  //     else{
		  //     //Convert the current Temp to degF
      //       var currTempC = tempArr[tempArr.length-1];
      //       var currTempF = (currTempC*(9/5) + 32);

      //       document.getElementById("insttemp").textContent = currTempF + " degF";
		  //     }


		    // if(tempArr[tempArr.length-1] != null && (tempArr[tempArr.length-2] != tempArr[tempArr.length-1])){
		    //   sendText();
        // }      
        if (textTimeBuffer < 10)
        {
          textTimeBuffer += 1;
        }
        sendText();  
  	});

	}, 1000);
	
	//Call the logic at /display every second to get the latest 	
	setInterval(function(){
    // sendText()
		var disPwr = 1;
		$.get('/display', function(data, status){
			disPwr = data[0];
		});

	}, 100);	
	
	
</script>


<script>
    function sendText() {
      console.log("Trying to send a text");
      console.log("Texttimebuffer: " + textTimeBuffer);
      var carrierExt = document.getElementById("carrierExt").value;
      var phoneNum = document.getElementById("phoneNum").value;

      var maxMsg = "";
      console.log("Min temp: " + parseInt(document.getElementById("maxTemp").value));
      console.log("Current temp: " + parseInt(document.getElementById("insttemp").textContent));
      if (textTimeBuffer == 10)
      {
        var currentTemp = parseInt(document.getElementById("insttemp").textContent);
        if (currentTemp > parseInt(document.getElementById("maxTemp").value)) {
          var maxMsg = document.getElementById("maxMessage").value;
          url = "./sendText?phoneNum=" + phoneNum + "&carrierExt=" + carrierExt + "&maxMsg=" + maxMsg;
          console.log(url);
          textTimeBuffer = 0;  
          $.get(url); // Uncommet this line after verifying. this sends the text request
        }
        var minMsg = "";
        if (currentTemp < parseInt(document.getElementById("minTemp").value)) {
          var minMsg = document.getElementById("minMessage").value;
          url = "./sendText?phoneNum=" + phoneNum + "&carrierExt=" + carrierExt + "&minMsg=" + minMsg;
          console.log(url);
          textTimeBuffer = 0; 
          $.get(url); // Uncommet this line after verifying. this sends the text request
        }	 
      }
    }
</script>
<script>
	// Calls the logic at /sendDisplayStatus in index.js to write display status to database
	function toggleDisplay()
	{
			$.post("/sendDisplayStatus")
	}
</script>

  
<p> 
<p id="demo"></p>
<p>
	 <div id="insttemp" class="bold-red"></div>
  <h2>User Input Form</h2>
  Enter a max temp threshold in degrees C:
  <INPUT id="maxTemp" NAME ="maxThreshold" VALUE="60">
  <p>
  Enter max temp warning text message :
  <INPUT id="maxMessage" NAME ="maxMessage" VALUE="Max Temp Warning">
  <p>
  Enter a min temp threshold in degrees C:
  <INPUT id="minTemp" NAME ="minThreshold" VALUE="0">
  <p>
  Enter min temp warning text message :
  <INPUT id="minMessage" NAME ="minMessage" VALUE="Min Temp Warning">
  <p>
  Enter a text-alert phone number (ex. 3196657091):
  <INPUT id="phoneNum" NAME ="phoneNumber" VALUE="8158760522">
  <select id="carrierExt">
    <option value="@messaging.sprintpcs.com">Sprint</option>
    <option value="@email.uscc.net">US Cellular</option>
    <option value="@vtext.com">Verizon</option>
    <option value="@txt.att.net">AT&T</option>
  </select>
  <input type=button onclick="sendText()"   value="Send Text"/>
  
  <p> 
  Toggle instantaneous temp reading:
  <INPUT NAME="degSwap" VALUE="degC <-> degF" TYPE=BUTTON 
  onClick=tempUnitSwap()>
  <p>
  Toggle thermostat display
  <INPUT NAME="displayPower" VALUE="Dispaly OFF/ON" TYPE=BUTTON 
  onClick=toggleDisplay(this.form)>
  <p>
  
  </FORM>
  
  <div id="tester2" style="width:600px;height:250px;"></div>

  </body>
  </html>
